const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
  } = require("@google/generative-ai");
  
  const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
  const genAI = new GoogleGenerativeAI(apiKey);
  
  const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash-exp",
  });
  
  const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
  };
  

    export const chatSession = model.startChat({
      generationConfig,
      history: [
        {
          role: "user",
          parts: [
            {text: "generate a study material for java having level of difficulty as easy.list each chapter with a short summary under it.list of topicsin each chapter in JSON format"},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "Okay, here's a study material outline for Java, geared towards beginners (easy difficulty), with chapter summaries and a JSON format list of topics for each chapter.\n\n**Study Material: Introduction to Java Programming (Easy Level)**\n\nThis material is designed to guide you through the fundamentals of Java programming. It assumes no prior programming experience.\n\n**Chapter 1: Getting Started with Java**\n\n*   **Summary:** This chapter introduces you to the world of Java and its importance. You'll learn what Java is, why it's used, and how to set up your development environment to start writing Java code.\n\n    * **Topics:**\n        ```json\n        {\n           \"topics\": [\n                {\"name\": \"What is Java?\", \"description\":\"Introduction to the Java programming language\"},\n                {\"name\":\"Why Use Java?\",\"description\":\"Applications and use cases of Java.\"},\n                {\"name\": \"Setting Up the Environment\", \"description\":\"Installing JDK and configuring your development environment.\"},\n                 {\"name\":\"First Java Program\",\"description\": \"Writing your first Hello World program\"}\n             ]\n        }\n        ```\n\n**Chapter 2: Understanding the Basics**\n\n*   **Summary:** This chapter dives into the fundamental building blocks of Java. You'll learn about data types, variables, operators, and how to perform simple calculations.\n\n    * **Topics:**\n        ```json\n        {\n            \"topics\": [\n                 {\"name\": \"Data Types\", \"description\":\"Understanding primitive data types (int, float, char, boolean, etc.).\"},\n                {\"name\": \"Variables\", \"description\":\"Declaring and initializing variables.\"},\n                {\"name\": \"Operators\", \"description\":\"Arithmetic, assignment, comparison, and logical operators.\"},\n                {\"name\": \"Basic Calculations\", \"description\":\"Performing simple mathematical calculations.\"}\n             ]\n         }\n        ```\n\n**Chapter 3: Control Flow**\n\n*   **Summary:** Here, you'll learn how to control the execution flow of your programs. You'll explore conditional statements (if-else) and looping structures (for, while).\n\n    * **Topics:**\n        ```json\n        {\n           \"topics\":[\n                {\"name\": \"Conditional Statements (if-else)\", \"description\":\"Making decisions in your program.\"},\n               {\"name\":\"Looping (for and while)\", \"description\":\"Repeating blocks of code using loops.\"}\n            ]\n        }\n        ```\n\n**Chapter 4: Working with Strings**\n\n*  **Summary:** This chapter focuses on how to work with text in Java. You will learn how to create, manipulate and compare strings and perform basic string operations.\n\n    * **Topics:**\n          ```json\n          {\n             \"topics\":[\n                  {\"name\": \"Creating Strings\", \"description\":\"Declaring and initializing strings.\"},\n                 {\"name\": \"String Concatenation\", \"description\":\"Joining strings together.\"},\n                  {\"name\":\"String Manipulation\",\"description\":\"Common operations like length, substring, uppercase and lowercase.\"},\n                  {\"name\":\"Comparing Strings\",\"description\":\"Checking for equality between strings\"}\n              ]\n          }\n          ```\n\n**Chapter 5: Arrays**\n\n*   **Summary:** Arrays allow you to store multiple values of the same type. In this chapter, you'll learn how to declare, initialize, and access elements in arrays.\n\n    * **Topics:**\n        ```json\n        {\n            \"topics\":[\n                {\"name\":\"Declaring Arrays\", \"description\":\"Creating arrays in Java.\"},\n                {\"name\":\"Initializing Arrays\", \"description\":\"Assigning values to array elements.\"},\n                {\"name\":\"Accessing Array Elements\",\"description\":\"Retrieving elements from an array using their index.\"},\n                {\"name\":\"Looping through arrays\",\"description\":\"Using loops to iterate over array elements.\"}\n                ]\n        }\n        ```\n\n**Chapter 6: Introduction to Methods**\n\n*   **Summary:** Methods are blocks of reusable code. This chapter introduces the concept of methods, how to define them, and how to call them from other parts of your program.\n\n     * **Topics:**\n        ```json\n        {\n             \"topics\":[\n                {\"name\": \"Defining Methods\", \"description\":\"Creating your own methods.\"},\n                {\"name\": \"Calling Methods\", \"description\":\"Using methods in your code.\"},\n                {\"name\": \"Method Parameters and Return Values\",\"description\":\"Passing data into and receiving data from methods.\"}\n             ]\n        }\n        ```\n\n**Chapter 7: Simple Input and Output**\n\n*   **Summary:** This chapter focuses on how to interact with the user. You'll learn how to display output to the console and how to receive input from the user.\n\n    * **Topics:**\n        ```json\n        {\n            \"topics\":[\n                  {\"name\": \"Printing Output (System.out.println)\", \"description\":\"Displaying information to the console.\"},\n                 {\"name\": \"Getting Input (Scanner)\", \"description\":\"Reading input from the user.\"}\n                ]\n         }\n        ```\n\n**Chapter 8: Practice and Problem Solving**\n\n*   **Summary:** This is a practice chapter where you will solve some basic programming problems using the concepts learned in the previous chapters. This will solidify your understanding.\n\n    * **Topics:**\n        ```json\n        {\n            \"topics\":[\n                 {\"name\":\"Practice Exercises\",\"description\":\"Solving simple coding problems.\"},\n                {\"name\":\"Debugging\",\"description\":\"Learn how to identify and fix issues in code.\"}\n             ]\n        }\n        ```\n\n**Important Notes:**\n\n*   **Hands-on Practice:** This material emphasizes hands-on coding. After each concept, try writing and running your own code.\n*   **Online Resources:** Use online Java tutorials, documentation, and forums for additional learning.\n*   **Patience:** Programming requires practice. Be patient and persistent, and you'll make progress.\n\nThis structure should provide a solid foundation for a beginner learning Java. Let me know if you have any other questions.\n"},
          ],
        },
        {
          role: "user",
          parts: [
            {text: "generate a study material for java having level of difficulty as easy.list each chapter with a short summary under it.list of topicsin each chapter in JSON format..iprovide full result in json format(summary,chapter_tilte,topics)"},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```json\n{\n  \"studyMaterial\": {\n    \"title\": \"Introduction to Java Programming (Easy Level)\",\n    \"description\": \"This material is designed to guide you through the fundamentals of Java programming. It assumes no prior programming experience.\",\n    \"chapters\": [\n      {\n        \"chapter_title\": \"Chapter 1: Getting Started with Java\",\n        \"summary\": \"This chapter introduces you to the world of Java and its importance. You'll learn what Java is, why it's used, and how to set up your development environment to start writing Java code.\",\n        \"topics\": {\n          \"topics\": [\n            { \"name\": \"What is Java?\", \"description\": \"Introduction to the Java programming language\" },\n            { \"name\": \"Why Use Java?\", \"description\": \"Applications and use cases of Java.\" },\n            {\n              \"name\": \"Setting Up the Environment\",\n              \"description\": \"Installing JDK and configuring your development environment.\"\n            },\n            { \"name\": \"First Java Program\", \"description\": \"Writing your first Hello World program\" }\n          ]\n        }\n      },\n      {\n        \"chapter_title\": \"Chapter 2: Understanding the Basics\",\n        \"summary\": \"This chapter dives into the fundamental building blocks of Java. You'll learn about data types, variables, operators, and how to perform simple calculations.\",\n        \"topics\": {\n          \"topics\": [\n            {\n              \"name\": \"Data Types\",\n              \"description\": \"Understanding primitive data types (int, float, char, boolean, etc.).\"\n            },\n            { \"name\": \"Variables\", \"description\": \"Declaring and initializing variables.\" },\n            {\n              \"name\": \"Operators\",\n              \"description\": \"Arithmetic, assignment, comparison, and logical operators.\"\n            },\n            {\n              \"name\": \"Basic Calculations\",\n              \"description\": \"Performing simple mathematical calculations.\"\n            }\n          ]\n        }\n      },\n      {\n        \"chapter_title\": \"Chapter 3: Control Flow\",\n        \"summary\": \"Here, you'll learn how to control the execution flow of your programs. You'll explore conditional statements (if-else) and looping structures (for, while).\",\n        \"topics\": {\n          \"topics\": [\n            {\n              \"name\": \"Conditional Statements (if-else)\",\n              \"description\": \"Making decisions in your program.\"\n            },\n            {\n              \"name\": \"Looping (for and while)\",\n              \"description\": \"Repeating blocks of code using loops.\"\n            }\n          ]\n        }\n      },\n      {\n        \"chapter_title\": \"Chapter 4: Working with Strings\",\n        \"summary\": \"This chapter focuses on how to work with text in Java. You will learn how to create, manipulate and compare strings and perform basic string operations.\",\n        \"topics\": {\n          \"topics\": [\n            { \"name\": \"Creating Strings\", \"description\": \"Declaring and initializing strings.\" },\n            {\n              \"name\": \"String Concatenation\",\n              \"description\": \"Joining strings together.\"\n            },\n            {\n              \"name\": \"String Manipulation\",\n              \"description\": \"Common operations like length, substring, uppercase and lowercase.\"\n            },\n            {\n              \"name\": \"Comparing Strings\",\n              \"description\": \"Checking for equality between strings\"\n            }\n          ]\n        }\n      },\n      {\n        \"chapter_title\": \"Chapter 5: Arrays\",\n        \"summary\": \"Arrays allow you to store multiple values of the same type. In this chapter, you'll learn how to declare, initialize, and access elements in arrays.\",\n        \"topics\": {\n          \"topics\": [\n            { \"name\": \"Declaring Arrays\", \"description\": \"Creating arrays in Java.\" },\n            {\n              \"name\": \"Initializing Arrays\",\n              \"description\": \"Assigning values to array elements.\"\n            },\n            {\n              \"name\": \"Accessing Array Elements\",\n              \"description\": \"Retrieving elements from an array using their index.\"\n            },\n            {\n              \"name\": \"Looping through arrays\",\n              \"description\": \"Using loops to iterate over array elements.\"\n            }\n          ]\n        }\n      },\n       {\n        \"chapter_title\": \"Chapter 6: Introduction to Methods\",\n        \"summary\": \"Methods are blocks of reusable code. This chapter introduces the concept of methods, how to define them, and how to call them from other parts of your program.\",\n        \"topics\": {\n          \"topics\": [\n            { \"name\": \"Defining Methods\", \"description\": \"Creating your own methods.\" },\n            { \"name\": \"Calling Methods\", \"description\": \"Using methods in your code.\" },\n            {\n              \"name\": \"Method Parameters and Return Values\",\n              \"description\": \"Passing data into and receiving data from methods.\"\n            }\n          ]\n        }\n      },\n      {\n        \"chapter_title\": \"Chapter 7: Simple Input and Output\",\n        \"summary\": \"This chapter focuses on how to interact with the user. You'll learn how to display output to the console and how to receive input from the user.\",\n        \"topics\": {\n          \"topics\": [\n            {\n              \"name\": \"Printing Output (System.out.println)\",\n              \"description\": \"Displaying information to the console.\"\n            },\n            {\n              \"name\": \"Getting Input (Scanner)\",\n              \"description\": \"Reading input from the user.\"\n            }\n          ]\n        }\n      },\n       {\n        \"chapter_title\": \"Chapter 8: Practice and Problem Solving\",\n        \"summary\": \"This is a practice chapter where you will solve some basic programming problems using the concepts learned in the previous chapters. This will solidify your understanding.\",\n        \"topics\": {\n          \"topics\": [\n            {\n              \"name\": \"Practice Exercises\",\n              \"description\": \"Solving simple coding problems.\"\n            },\n             {\n              \"name\": \"Debugging\",\n              \"description\": \"Learn how to identify and fix issues in code.\"\n            }\n\n          ]\n        }\n      }\n    ]\n  }\n}\n```\n"},
          ],
        },
      ],
    });
  
    // const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
    // console.log(result.response.text());

  